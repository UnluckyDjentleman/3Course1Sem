Ответы на 5 лабу по С#
1. -Класс размещается в куче, структура в стеке
   -Структуры не поддерживают наследование
   -Запрещают деструктор
   -Класс - ссылочный тип, структура - значимый(однако структура такжее может передаваться по ссылке с помощью ref и out)
2. В структуре может быть конструктор с параметрами, реализация интерфейсов. До С#10 не могло быть инициализации полей в структуре при объявлении, автоматической инициализации полей при компиляции, а также конструктор, используемый по умолчанию.
3. Перечисления - набор логически связанных численных констант. Они объявляются с помощью ключевого слова enum. Константам разрешается присваивать значения, в противном случае оно получается автоматически.
 enum Colors{
	Red,//0
	Blue,//1
	Yellow,//2
	Orange=5,
	Black=1000
}
4. ICloneable - клонирование объектов
   IEnumerable - перебор элементов необобщённой коллекции
   IEnumerator - перебор по необобщённой коллекции
   IComparable - сравнение объектов для выяснения порядка
   IComparer - сравнение объектов
   IDisposable - механизм освобождения управляемых ресурсов
   IEquatable<T> - сравнение объектов на равенство
   IStructuralEquatable - проверка на равенство по значению
5. IComparable - сравнение объектов для выяснения порядка
6. ICloneable - клонирование объектов
7. Полиморфизм - вызов экземпляра потомка через метод предка. 
8. Виртуальные методы позволяют сделать методы и свойства доступными для переопределения. Также они определяют интерфейс всей иерархии классов. 
9. Запрет на переопределение методов можно сделать с помощью ключевого слова sealed. Данное ключевое слова делает класс, метод или свойство "бесплодным", то есть позволяет запретить наследование.
Ответы на 6 лабу по ООП
1. try - контролируемый блок
   finally - очищающий ресурсы код
   catch - обработчик
   throw - генерация исключительной ситуации
2. Сначала идёт контр. блок. Если он находит исключение, происходит его обработка. После при наличии очищ. кода, выполняется он.
3. throw
4. См. 1 вопрос
   Не находит искл.:
   1) Контр. блок выполняется до конца
   2) Пропускается catch
   3) Выполняется очистка, если таковая имеется
   Находит:
   1) Прерывание контр.блока
   2) Поиск обработчика
	Не Имеется:
	 а) размотка стека и прочего из области видимости
 	 б) генерация в точке вызова метода
	 в) не найдено блока - сообщение о невыполнении, прекращение работы
	Имеется:
	 а) управление переходит к обработчику, совместимого с типом.
	 б)объект - исключение передаётся обработчику в качестве параметра
   3) finally
5. Ошибка, при наличии finally - прекращение работы
6. Фильтры позволяют указать доп. условия для обработчика. Для этого используется ключевое слово when.
7. Вложенными могут быть блоки контроля.
8. Блок catch без параметров
9. сначала более специфичное исключение
   насл. от System.Exception и System.Application
   finally выполнять всегда
   при lock, using, foreach блоки ген. автоматически
   генерация в finally нежелательно
10. It's OK
11. В catch написать throw
12. GetData()
    GetBaseException()
    GetType()
    GetEquals()
Ответы на 7 лабу по ООП
1. generic - параметризованный тип для многократного использования алгоритмов
2. 3, так как поле не инициализировано
3. public class Name<T> where T:type
4. public class Name<T> where T:type1,type2,...
5. Базовые типы, конструктор, базовый класс, структура, ссылочные типы
6. Ограничения на базовый класс, распространяется и на А, и на B. Так как B наследуется от А
7. Ограничение на ссылочный тип
8. Ограничение на структуру
9. 
10. Получить обобщенное значение по умолчанию для параметра типа можно благодаря использованию ключевого слова default
11.в CLR размещает статические поля типа в самом объекте-типе , каждый закрытый тип имеет свои статические поля
	public class Bruh<T>{public static string words;}
	static void Main(){Bruh<int>.words="Meow";Bruh<bool>.words="Cyka";}
12.  public interface IDoSomething<T>
    {
        void RemoveEl(T elme);
        void AddEl(T elme);
        void LookEl(T elme);
        void Add(T col);
        void Remove(T col);
        void Look(T col);
        void Print();
        T mod { get; }
    }
13. Отличия обобщённых классов и структур схожи с обычными.
14. 
Ответы на лабу 8
1. Делегат - объект для хранения ссылок на методы. Он определяется с помощью ключевого слова delegate. Перед этим указываются атрибуты и спецификаторы, а после тип и имя с параметрами.
2. Хранение ссылки на метод(ы), поочерёдный их вызов, обеспечение связи "источник - значение", динамическое определение метод, обеспечение универсальности метода для возможности передачи других методов.
3. Создание объекта делегата с помощью конструктора, куда в качестве параметра передаётся метод и присвоение переменной делегата метода и его вызов.
4. 